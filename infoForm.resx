<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="githubLabel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAfBJREFUOE+F1L1rFFEUhvFdDKiBRIjZ2FikEVmxS/4E02thZZNSSRfYdEHFryJ2
        IUG0s0pjsyBIUiuYQhECVhYBN18gisYPlNU8z+y56924gxd+MJx73pPszJ2p5OtUbUxVnMUsnmEL7eC1
        NffssTfS2bIYhnEVr/ATf0q4Z4+9Zop8d0VhDEv4jn5D+rHXjNmeYSewjF/4gS/oNyBnj71mzDqjO/Aa
        vsHGJ7iERWziHV4Gr625Z4+9Zsw6oxhYx2ukvzwP68dwBqcxEry25p499qacM+oWG8gfwB0cQeee9Fnu
        RY+9KeeMhhurWXEbUyhCZSvt4wLMpPyqxd28gEFEtHzZE735P7Rr0QObCiuoRua/y97IpHz78MCnGEBE
        ypc90WumZ2ArK2zApxix8mVP9JpJ+ZbFZlbwkN7EUUT03+Ve9Nibn5CmGzPwxH/AW+zhPiZwEsURCl6P
        YhIL+Ig0zNdwxqZxvMAOPJOP4X31ODyEA9LAWtTe4zfSMD3HeGq8gs/wC+I5fIB1zKH4+cHrR8gH6ROc
        0b0fx3EL+/BFP4fz8CennuQe8mG+x2ad0XOTh3AD3sM38GFNIx+mfKD3/TrMdoalZQH+pItYgw/qLvJh
        uo2v8A3xi1N+ItwIfjAvw6eZ12XNveKjqr+rUjkAYaQA87nK83wAAAAASUVORK5CYII=
</value>
  </data>
  <data name="linkedinLabel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAARCAYAAADdRIy+AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAATZJREFUOE+1088rBHEcxvFV2gvKroNN3LfcHPwBDpIjbsp1Lzb+BSX/ALGSvTns
        RZm7ODhQyo+DHDgockEppUXL+6lnZMowZrP1aufzzLdnvrt9J1MsBbt4QyOFV6wimwk/Dt+bcISc6yKF
        ZyhjCc/OkjhG3nWRwmlo7sCBsyS0w28LF9GJAVw6SyK2UD9zHxeeJfzzdf2CR3+H9yW2MMAUZnCHbUxi
        FpsYxyAmsINfC+ehuYArLHvOIufrUD+05sfCBc+90OKKZxnGOsbQglZsIVVhG3T4tWYP7VC+5uzPhV04
        hdacIA/lK86aL3RecRZfiEih57gd6h3+l0K9ep+n4GuhFldRwxPOPW/gAVpz71m57ivTDrvRh4IK69CN
        tA6hc6kjNapCPfEGtylcYw49GCmWgqEPFUdTm7R2t6gAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjE4AQIxOAJ+MTgDfjE4A/4xOAP+MTgDfjE4An4xOAEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACMTgAQjE4Ar5FRAP+yYwD/yXAA/9d4AP/XeAD/yXAA/7JjAP+RUQD/jE4Ar4xO
        ABAAAAAAAAAAAAAAAACMTgAQjE4Az6NbAP/SdQD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/0nUA/6Nb
        AP+MTgDPjE4AEAAAAAAAAAAAjE4Ar6NbAP/XeAD/13gA/9d4AP/XeAD////////////XeAD/13gA/9d4
        AP/XeAD/o1sA/4xOAK8AAAAAjE4AQJFRAP/SdQD/13gA/9d4AP/XeAD/13gA////////////13gA/9d4
        AP/XeAD/13gA/9J1AP+RUQD/jE4AQIxOAJ+yYwD/13gA/9d4AP/XeAD/13gA/9d4AP///////////9d4
        AP/XeAD/13gA/9d4AP/XeAD/smMA/4xOAJ+MTgDfyXAA/9d4AP/XeAD/13gA/9d4AP/XeAD/////////
        ///XeAD/13gA/9d4AP/XeAD/13gA/8lwAP+MTgDfjE4A/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA////
        ////////13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/jE4A/4xOAP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP///////////9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/4xOAP+MTgDfyXAA/9d4AP/XeAD/13gA/9d4
        AP/XeAD////////////XeAD/13gA/9d4AP/XeAD/13gA/8lwAP+MTgDfjE4An7JjAP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP+yYwD/jE4An4xOAECRUQD/0nUA/9d4
        AP/XeAD/13gA/9d4AP///////////9d4AP/XeAD/13gA/9d4AP/SdQD/kVEA/4xOAEAAAAAAjE4Ar6Nb
        AP/XeAD/13gA/9d4AP/XeAD////////////XeAD/13gA/9d4AP/XeAD/o1sA/4xOAK8AAAAAAAAAAIxO
        ABCMTgDPo1sA/9J1AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/SdQD/o1sA/4xOAM+MTgAQAAAAAAAA
        AAAAAAAAjE4AEIxOAK+RUQD/smMA/8lwAP/XeAD/13gA/8lwAP+yYwD/kVEA/4xOAK+MTgAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjE4AQIxOAJ+MTgDfjE4A/4xOAP+MTgDfjE4An4xOAEAAAAAAAAAAAAAA
        AAAAAAAA8A8AAMADAACAAQAAgAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAIAB
        AADAAwAA8A8AAA==
</value>
  </data>
</root>